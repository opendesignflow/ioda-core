buildscript {
    dependencies {
        classpath "org.odfi.indesign:indesign-core:1.3.3-SNAPSHOT"
        classpath "org.odfi.ubroker:ubroker-core:1.1.0-SNAPSHOT"
    }
}

plugins {
    // OOXOO
    id "org.odfi.ooxoo" version "3.4.4"

    // Publish
    id 'maven-publish'
    id "java-library"

    // Scala
    id 'scala'

}

group = 'org.odfi.ioda'
version = gradle.ext.has("version") ? gradle.ext.version : "dev"

// Sources
//-------------------
sourceSets {
    main {
        scala {
            // Generated from ooxoo
            srcDir new java.io.File(getBuildDir(), "generated-sources/scala")
        }
    }

}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(11))
    }
    withJavadocJar()
    withSourcesJar()
}

javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

// Dependencies
//-------------------



def indesign_version = "1.3.3-SNAPSHOT"
def ubroker_version = "1.1.0-SNAPSHOT"
def scala_major = "2.13"
def scala_version = gradle.ext.has("scala_version") ? gradle.ext.scala_version : "$scala_major.5"
dependencies {


    // ODFI
    //----------

    // Dependencies that can be build alongside the project
    if (findProject(":ubroker-core") != null) {
        api project(":ubroker-core")

    } else {
        api "org.odfi.ubroker:ubroker-core:$ubroker_version"
    }
    if (findProject(":indesign-core") != null) {
        api project(":indesign-core")
        /*api ("org.odfi.ioda.instruments:instruments-core:$instruments_version" ) {
            exclude group: "org.odfi.indesign", module: "indesign-core"
        }*/

        /*api ("org.odfi.ubroker:ubroker-core:$ubroker_version") {
            exclude group: "org.odfi.indesign", module: "indesign-core"
        }*/
    } else {
        api("org.odfi.indesign:indesign-core:$indesign_version")

        //api "org.odfi.ioda.instruments:instruments-core:$instruments_version"
    }


    // External dependencies
    //-------------
    api "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.12.0"
    api "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.12.0"
    api "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.12.0"

    api "org.jmdns:jmdns:3.5.6"

    api "org.apache.logging.log4j:log4j-api:2.14.1"
    api "org.apache.logging.log4j:log4j-core:2.14.1"
    api "org.apache.logging.log4j:log4j-api-scala_$scala_major:12.0"
    api "org.fusesource.jansi:jansi:2.1.1"

    api "org.apache.httpcomponents:fluent-hc:4.5.13"

    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    // api group: 'com.google.code.gson', name: 'gson', version: '2.8.6'

    api("org.scala-lang:scala-library:$scala_version")
}


repositories {

    mavenLocal()
    mavenCentral()
    maven {
        name = 'Sonatype Nexus Snapshots'
        url = 'https://oss.sonatype.org/content/repositories/snapshots/'
    }
    maven {
        name = 'ODFI Releases'
        url = 'https://www.opendesignflow.org/maven/repository/internal/'
    }
    maven {
        name = 'ODFI Snapshots'
        url = 'https://www.opendesignflow.org/maven/repository/snapshots/'
    }
    maven {
        url "https://repo.triplequote.com/libs-release/"
    }
    google()
}

publishing {
    publications {

        /*publishToMavenLocal(MavenPublication) {

        }*/
        publishToMavenLocal(MavenPublication) {

            artifactId "ioda-core"
            from components.java

            pom {
                name = 'IODA Core'
                description = 'IODA Core module'

                //properties = [ ]
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'richnou'
                        name = 'Richnou'
                        email = 'leys.richard@gmail.com'
                    }
                }

            }
        }

    }
    repositories {
        maven {

            // change URLs to point to your repos, e.g. http://my.org/repo
            def releasesRepoUrl = "https://www.opendesignflow.org/maven/repository/internal/"
            def snapshotsRepoUrl = "https://www.opendesignflow.org/maven/repository/snapshots"
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl

            // Credentials
            def mavenOdfiPropertiesFile = new File(System.getProperty("user.home") + File.separator + ".gradle/odfi-maven.properties").getCanonicalFile()

            if (mavenOdfiPropertiesFile.exists()) {
                def keystoreProperties = new Properties()
                keystoreProperties.load(new FileInputStream(mavenOdfiPropertiesFile))

                credentials {
                    username keystoreProperties["user"]
                    password keystoreProperties["password"]
                }
            }
        }
    }
}